package project;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.util.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.*;
import project.DateToWords;
import java.lang.NullPointerException;
import java.sql.SQLException;
import java.text.Format;
import java.text.SimpleDateFormat;
/**
 *
 * @author NODE5
 */
public class modifypage extends JFrame {
            String  MobileNo ; 
            int     Enrollment;
            Date DateofBirth1=new Date();
            Date DateofAdmission1=new Date();;
            //Date DateofBirthinWord=new Date();
            DateToWords dw=new DateToWords();
            String Name , Cast , NameofMother , Nationality , Gender , PlaceofBirth , Institutionlastattended , DateofBirthinWord , GroupofBlood , Course , Registerno , Address;
            String coursesemester,DC;
            /**
     * Creates new form deletepage
     */
    public modifypage() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderbutton = new javax.swing.ButtonGroup();
        dcstudentbuttion = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        caste = new javax.swing.JLabel();
        castefill = new javax.swing.JTextField();
        nameofmother = new javax.swing.JLabel();
        nameofmotherfill = new javax.swing.JTextField();
        nationality = new javax.swing.JLabel();
        nationalityfill = new javax.swing.JTextField();
        name = new javax.swing.JLabel();
        enrollmentno = new javax.swing.JLabel();
        enrollmentnofill = new javax.swing.JTextField();
        dateofbirth = new javax.swing.JLabel();
        dateofadmission = new javax.swing.JLabel();
        birthofdatefill = new com.toedter.calendar.JDateChooser();
        dateofadmition = new com.toedter.calendar.JDateChooser();
        gender = new javax.swing.JLabel();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        other = new javax.swing.JRadioButton();
        placeofbirth = new javax.swing.JLabel();
        placeofbirthfill = new javax.swing.JTextField();
        institutionlastattende = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        Submit = new javax.swing.JButton();
        dateofbirthinword = new javax.swing.JLabel();
        dateofbirthinwordfill = new javax.swing.JTextField();
        namefill = new javax.swing.JTextField();
        branch = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        registernumberfill = new javax.swing.JTextField();
        bloodgr = new javax.swing.JLabel();
        mobileno = new javax.swing.JLabel();
        mobilefill = new javax.swing.JTextField();
        filldateofbirth = new javax.swing.JButton();
        address = new javax.swing.JLabel();
        fillinformationpage = new javax.swing.JButton();
        newenrollmentno = new javax.swing.JLabel();
        newenrollmentnofill = new javax.swing.JTextField();
        branchfill = new javax.swing.JComboBox();
        bloodgrfill = new javax.swing.JComboBox();
        coursesemesterfill = new javax.swing.JLabel();
        selectcourse = new javax.swing.JComboBox();
        selectsemester = new javax.swing.JComboBox();
        selectscheme = new javax.swing.JComboBox();
        dcstudentlabel = new javax.swing.JLabel();
        dcyes = new javax.swing.JRadioButton();
        dcno = new javax.swing.JRadioButton();
        fillregisternumberbutton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        addressfill = new javax.swing.JTextField();
        institutionlastattendedfill = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Student Modification");

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 204, 0), 4, true));
        jPanel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(1355, 680));

        caste.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        caste.setText("Caste");

        castefill.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        castefill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                castefillActionPerformed(evt);
            }
        });

        nameofmother.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        nameofmother.setText("Name Of Mother");

        nameofmotherfill.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        nameofmotherfill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameofmotherfillActionPerformed(evt);
            }
        });

        nationality.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        nationality.setText("Nationality");

        nationalityfill.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N

        name.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        name.setText("Name");

        enrollmentno.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        enrollmentno.setText("Enrollment No.");

        enrollmentnofill.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        enrollmentnofill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enrollmentnofillActionPerformed(evt);
            }
        });
        enrollmentnofill.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                enrollmentnofillKeyTyped(evt);
            }
        });

        dateofbirth.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dateofbirth.setText("Date of Birth");

        dateofadmission.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dateofadmission.setText("Date of Admission");

        birthofdatefill.setDateFormatString("dd/MM/yyyy");
        birthofdatefill.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N

        dateofadmition.setDateFormatString("dd/MM/yyyy");

        gender.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        gender.setText("Gender");

        male.setBackground(new java.awt.Color(255, 255, 102));
        genderbutton.add(male);
        male.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        male.setText("Male");

        female.setBackground(new java.awt.Color(255, 255, 102));
        genderbutton.add(female);
        female.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        female.setText("Female");

        other.setBackground(new java.awt.Color(255, 255, 102));
        genderbutton.add(other);
        other.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        other.setText("Other");

        placeofbirth.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        placeofbirth.setText("Place of Birth");

        placeofbirthfill.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        placeofbirthfill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeofbirthfillActionPerformed(evt);
            }
        });

        institutionlastattende.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        institutionlastattende.setText("Institution last attended");

        back.setBackground(new java.awt.Color(204, 204, 204));
        back.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        Submit.setBackground(new java.awt.Color(204, 204, 204));
        Submit.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Submit.setText("Submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        dateofbirthinword.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dateofbirthinword.setText("Date Of Birth In Word");

        dateofbirthinwordfill.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        dateofbirthinwordfill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateofbirthinwordfillActionPerformed(evt);
            }
        });

        namefill.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N

        branch.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        branch.setText("Branch");
        branch.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Register Number");

        registernumberfill.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        registernumberfill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registernumberfillActionPerformed(evt);
            }
        });

        bloodgr.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bloodgr.setText("Blood Gr.");

        mobileno.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mobileno.setText("Mobile No");

        mobilefill.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        mobilefill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobilefillActionPerformed(evt);
            }
        });
        mobilefill.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mobilefillKeyTyped(evt);
            }
        });

        filldateofbirth.setBackground(new java.awt.Color(204, 204, 204));
        filldateofbirth.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        filldateofbirth.setText("Fill Date Of Birth");
        filldateofbirth.setPreferredSize(new java.awt.Dimension(158, 27));
        filldateofbirth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filldateofbirthActionPerformed(evt);
            }
        });

        address.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        address.setText("Address");

        fillinformationpage.setBackground(new java.awt.Color(204, 204, 204));
        fillinformationpage.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        fillinformationpage.setText("Fill Information Of Student");
        fillinformationpage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fillinformationpageActionPerformed(evt);
            }
        });

        newenrollmentno.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        newenrollmentno.setText("New Enrollment No.");

        newenrollmentnofill.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        newenrollmentnofill.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                newenrollmentnofillKeyTyped(evt);
            }
        });

        branchfill.setBackground(new java.awt.Color(255, 255, 102));
        branchfill.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        branchfill.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "----Select Branch----", "Computer Engineering", "Electrical Engineering", "Mechanical Engineering", "Information Technology" }));
        branchfill.setPreferredSize(new java.awt.Dimension(183, 24));

        bloodgrfill.setBackground(new java.awt.Color(255, 255, 102));
        bloodgrfill.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        bloodgrfill.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---Select Blood Group--", "A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-" }));
        bloodgrfill.setPreferredSize(new java.awt.Dimension(183, 24));
        bloodgrfill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodgrfillActionPerformed(evt);
            }
        });

        coursesemesterfill.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        coursesemesterfill.setText("Course / Semester");

        selectcourse.setBackground(new java.awt.Color(255, 255, 102));
        selectcourse.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        selectcourse.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---SELECT COURSE---", "CO", "EE", "ME", "IF" }));
        selectcourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectcourseActionPerformed(evt);
            }
        });

        selectsemester.setBackground(new java.awt.Color(255, 255, 102));
        selectsemester.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        selectsemester.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---SELECT SEMESTER---", "1", "2", "3", "4", "5", "6" }));
        selectsemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectsemesterActionPerformed(evt);
            }
        });

        selectscheme.setBackground(new java.awt.Color(255, 255, 102));
        selectscheme.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        selectscheme.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---SELECT SCHEME---", "E", "G", "I" }));
        selectscheme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectschemeActionPerformed(evt);
            }
        });

        dcstudentlabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dcstudentlabel.setText("Student Is DC");

        dcyes.setBackground(new java.awt.Color(255, 255, 102));
        dcstudentbuttion.add(dcyes);
        dcyes.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        dcyes.setText("Yes");
        dcyes.setPreferredSize(new java.awt.Dimension(55, 27));

        dcno.setBackground(new java.awt.Color(255, 255, 102));
        dcstudentbuttion.add(dcno);
        dcno.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        dcno.setText("No");
        dcno.setPreferredSize(new java.awt.Dimension(55, 27));
        dcno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcnoActionPerformed(evt);
            }
        });

        fillregisternumberbutton.setBackground(new java.awt.Color(204, 204, 204));
        fillregisternumberbutton.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        fillregisternumberbutton.setText("Fill Register Number");
        fillregisternumberbutton.setPreferredSize(new java.awt.Dimension(158, 27));
        fillregisternumberbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fillregisternumberbuttonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel8.setText("Student Information Management System");

        jLabel2.setBackground(new java.awt.Color(255, 153, 0));
        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Student Modification");

        addressfill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressfillActionPerformed(evt);
            }
        });

        institutionlastattendedfill.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(380, 380, 380)
                .addComponent(jLabel8)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateofbirth)
                            .addComponent(nameofmother)
                            .addComponent(nationality)
                            .addComponent(dateofadmission)
                            .addComponent(placeofbirth)
                            .addComponent(institutionlastattende)
                            .addComponent(gender)
                            .addComponent(caste)
                            .addComponent(dcstudentlabel)
                            .addComponent(branch))
                        .addGap(80, 80, 80)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateofbirthinwordfill, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(branchfill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filldateofbirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(placeofbirthfill, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nationalityfill, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dateofadmition, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(male)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(female)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(other))
                                    .addComponent(castefill, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(birthofdatefill, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(dcyes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dcno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(nameofmotherfill, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(institutionlastattendedfill, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(dateofbirthinword)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(306, 306, 306)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(name)
                                    .addComponent(newenrollmentno)
                                    .addComponent(enrollmentno))
                                .addGap(97, 97, 97)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(enrollmentnofill, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(namefill, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(newenrollmentnofill, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(136, 136, 136)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(coursesemesterfill)
                                    .addComponent(address)
                                    .addComponent(bloodgr))
                                .addGap(50, 50, 50)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bloodgrfill, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(selectsemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(selectscheme, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addressfill, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(selectcourse, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(mobileno)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(74, 74, 74)
                                        .addComponent(back)))
                                .addGap(104, 104, 104)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(Submit)
                                        .addGap(43, 43, 43)
                                        .addComponent(fillinformationpage))
                                    .addComponent(mobilefill, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(registernumberfill, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(fillregisternumberbutton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(63, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel8)
                .addGap(1, 1, 1)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namefill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(address)
                    .addComponent(addressfill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newenrollmentno)
                            .addComponent(newenrollmentnofill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(enrollmentnofill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enrollmentno, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateofbirth, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(birthofdatefill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bloodgr, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bloodgrfill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(coursesemesterfill)
                            .addComponent(selectcourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addComponent(selectsemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(male)
                            .addComponent(female)
                            .addComponent(other)
                            .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(castefill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(caste, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nameofmotherfill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameofmother, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nationality, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nationalityfill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dateofadmition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateofadmission, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(placeofbirth, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(placeofbirthfill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(institutionlastattende, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(institutionlastattendedfill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(selectscheme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dcstudentlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcyes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateofbirthinword, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateofbirthinwordfill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filldateofbirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(branchfill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(branch, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(registernumberfill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fillregisternumberbutton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mobileno, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mobilefill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(back)
                    .addComponent(Submit)
                    .addComponent(fillinformationpage))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mobilefillKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobilefillKeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c)|| (c==KeyEvent.VK_BACK_SPACE)||c==KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_mobilefillKeyTyped

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        try
        {

            male.setActionCommand("Male");
            female.setActionCommand("Female");
            other.setActionCommand("Other");
            dcyes.setActionCommand("Yes");
            dcno.setActionCommand("No");
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            Connection con=DriverManager.getConnection("jdbc:ucanaccess://D:\\project\\project\\project.accdb");
            int i=0;
            String sql="SELECT Enrollment FROM registerpage";
            PreparedStatement p=con.prepareStatement(sql);
            ResultSet r=null;
            r=p.executeQuery();
            while (r.next())
            {
                if(r.getInt(1)==Integer.parseInt(enrollmentnofill.getText()))
                {
                    //continue;
                    i=1;
                    break;
                }
                else
                {
                    i=2;
                }
            }
            if (i==1)
            {
                Enrollment=Integer.parseInt(newenrollmentnofill.getText());
                Name=namefill.getText();
                DateofBirth1=birthofdatefill.getDate();
                //String s123=birthofdatefill.getDate();
                SimpleDateFormat f=new SimpleDateFormat("dd/MM/yyyy");
                //System.out.println(DateofBirth);
                String DateofBirth=f.format(DateofBirth1);
                Cast=castefill.getText();
                NameofMother=nameofmotherfill.getText();
                Nationality=nationalityfill.getText();
                DateofAdmission1=dateofadmition.getDate();
                SimpleDateFormat f1=new SimpleDateFormat("dd/MM/yyyy");
                //System.out.println(DateofBirth);
                String DateofAdmission=f1.format(DateofAdmission1);
                Gender=genderbutton.getSelection().getActionCommand();
                PlaceofBirth=placeofbirthfill.getText();
                Institutionlastattended=institutionlastattendedfill.getText();
                //String s1=dw.setDateInWords(DateofBirth);

                DateofBirthinWord=dateofbirthinwordfill.getText();
                
                GroupofBlood=(String) bloodgrfill.getSelectedItem();
                MobileNo=mobilefill.getText();
                Course=(String) branchfill.getSelectedItem();
                Registerno=registernumberfill.getText();
                Address=addressfill.getText();
                String a123=(String) selectcourse.getSelectedItem();
                String a124=(String) selectsemester.getSelectedItem();
                String a125=(String) selectscheme.getSelectedItem();
                a123=a123.concat("-");
                a123=a123.concat(a124);
                a123=a123.concat(a125);
                coursesemester=a123;
                DC=dcstudentbuttion.getSelection().getActionCommand();
                /*p1.setLong(1,Enrollment);
                p1.setString(2,Name);
                p1.setDate(3, new java.sql.Date(DateofBirth.getDate()));
                p1.setString(4, Cast);
                p1.setString(5, NameofMother);
                p1.setString(6, Nationality);
                p1.setDate(7, new java.sql.Date(DateofAdmission.getDate()));
                p1.setString(8, Gender);
                p1.setString(9, PlaceofBirth);
                p1.setString(10, Institutionlastattended);
                p1.setString(11, DateofBirthinWord);
                p1.setString(12, GroupofBlood);
                p1.setLong(13, MobileNo);
                p1.setString(14, Course);
                p1.setString(15, Registerno);
                p1.setString(16, Address);*/
                int y=1;
            String sql5="SELECT Enrollment FROM registerpage";
            PreparedStatement p5=con.prepareStatement(sql5);
            ResultSet r5=null;
            r5=p.executeQuery();
            while (r5.next())
            {
                if((r5.getInt(1)==Enrollment)&&(Enrollment!=Integer.parseInt(enrollmentnofill.getText())))
                {
                    //continue;
                    y=0;
                    break;
                }
                else
                {
                    continue;
                    //i=2;
                }
            }
                if(y==1)
                {
                String sql1="delete from registerpage where Enrollment = '"+Integer.parseInt(enrollmentnofill.getText())+"' ";
                PreparedStatement p1=con.prepareStatement(sql1);
                p1.executeUpdate();
                String sql12="insert into registerpage (Enrollment , Name , DateofBirth , Cast , NameofMother , Nationality , DateofAdmission , Gender , PlaceofBirth , Institutionlastattended , DateofBirthinWord , GroupofBlood  , MobileNo , Course , Registerno , Address,coursesemester,DC) values('"+Enrollment+"','"+Name+"','"+DateofBirth+"','"+Cast+"','"+NameofMother+"','"+Nationality+"','"+DateofAdmission+"','"+Gender+"','"+PlaceofBirth+"','"+Institutionlastattended+"','"+DateofBirthinWord+"','"+GroupofBlood+"','"+MobileNo+"','"+Course+"','"+Registerno+"','"+Address+"','"+coursesemester+"','"+DC+"')";
                PreparedStatement p12=con.prepareStatement(sql12);
                p12.executeUpdate();
                JOptionPane.showMessageDialog(null, "Student is Successful Modify");
                                dispose();
                new firstpage().setVisible(true);
                
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "New Enrollment Number is already register");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Student is not Register");
            }
        }
        catch(ClassNotFoundException | SQLException | HeadlessException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        catch(NumberFormatException nfe)
        {
            JOptionPane.showMessageDialog(null, "Fill All Informations");
        }
        catch(NullPointerException npe1)
        {
            JOptionPane.showMessageDialog(null, "Fill All Informations");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_SubmitActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
                dispose();
        new firstpage().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_backActionPerformed

    private void enrollmentnofillKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enrollmentnofillKeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c)|| (c==KeyEvent.VK_BACK_SPACE)||(c==KeyEvent.VK_DELETE)))
        {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_enrollmentnofillKeyTyped

    private void nameofmotherfillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameofmotherfillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameofmotherfillActionPerformed

    private void castefillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_castefillActionPerformed
        
        // TODO add your handling code here:
    }//GEN-LAST:event_castefillActionPerformed

    private void filldateofbirthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filldateofbirthActionPerformed
        DateofBirth1=birthofdatefill.getDate();
        String s1=dw.setDateInWords(DateofBirth1);
        dateofbirthinwordfill.setText(s1);
        // TODO add your handling code here:
    }//GEN-LAST:event_filldateofbirthActionPerformed

    private void newenrollmentnofillKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newenrollmentnofillKeyTyped
char c=evt.getKeyChar();
        if(!(Character.isDigit(c)|| (c==KeyEvent.VK_BACK_SPACE)||(c==KeyEvent.VK_DELETE)))
        {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_newenrollmentnofillKeyTyped

    private void fillinformationpageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fillinformationpageActionPerformed
            try
            {
            male.setActionCommand("Male");
            female.setActionCommand("Female");
            other.setActionCommand("Other");
            dcyes.setActionCommand("Yes");
            dcno.setActionCommand("No");
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            Connection con=DriverManager.getConnection("jdbc:ucanaccess://D:\\project\\project\\project.accdb");
            int i=0;
            String sql="SELECT [Enrollment],[Name],[DateofBirth],[Cast],[NameofMother],[Nationality],[DateofAdmission],[Gender],[PlaceofBirth],[Institutionlastattended],[DateofBirthinWord],[GroupofBlood],[MobileNo],[Course],[Registerno],[Address],[coursesemester],[DC] FROM registerpage";
            PreparedStatement p=con.prepareStatement(sql);
            ResultSet r=null;
            int k=0;
            r=p.executeQuery();
            while (r.next())
            {
                if(r.getInt(1)==Integer.parseInt(enrollmentnofill.getText()))
                {
                    k=1;
                    newenrollmentnofill.setText(Integer.toString(r.getInt(1)));
                    namefill.setText(r.getString(2));
                    Date date12=new SimpleDateFormat("dd/MM/yyyy").parse(r.getString(3));
                    birthofdatefill.setDate(date12);
                    castefill.setText(r.getString(4));
                    nameofmotherfill.setText(r.getString(5));
                    nationalityfill.setText(r.getString(6));
                    Date date123=new SimpleDateFormat("dd/MM/yyyy").parse(r.getString(7));
                    dateofadmition.setDate(date123);
                    // male.setSelected(true);
                    String abc,abc1,abc2;
                    if(r.getString(8).equalsIgnoreCase("Male"))
                    {
                        abc="Male";
                        male.setSelected(true);
                    }
                    else
                    {
                        if(r.getString(8).equalsIgnoreCase("Female"))
                        {
                            abc1="Female";
                            female.setSelected(true);
                        }
                        else
                        {
                        if(r.getString(8).equalsIgnoreCase("Other"))
                        {
                            abc2="Other";
                            other.setSelected(true);
                        }
                        }
                    }
                    placeofbirthfill.setText(r.getString(9));
                    institutionlastattendedfill.setText(r.getString(10));
                    dateofbirthinwordfill.setText(r.getString(11));
                    String abc11,abc12,abc13;
                    //Computer Engineering Electrical Engineering Mechanical Engineering Information Technology
                    if(r.getString(14).equalsIgnoreCase("Computer Engineering"))
                    {
                        branchfill.setSelectedIndex(1);
                        //abc="Male";
                        //male.setSelected(true);
                    }
                    if(r.getString(14).equalsIgnoreCase("Electrical Engineering"))
                        {
                            branchfill.setSelectedIndex(2);
                            //abc1="Female";
                            //female.setSelected(true);
                        }
                        
                        if(r.getString(14).equalsIgnoreCase("Mechanical Engineering"))
                        {
                            branchfill.setSelectedIndex(3);
                            //abc2="Other";
                            //other.setSelected(true);
                        }
                        
                            if(r.getString(14).equalsIgnoreCase("Information Technology"))
                        {
                            branchfill.setSelectedIndex(4);
                            //abc2="Other";
                            //other.setSelected(true);
                        }
                        
                    //branchfill.setText(r.getString(12));
                    registernumberfill.setText(r.getString(15));
                    //A+ A- B+ B- AB+ AB- O+ O-
                    if(r.getString(12).equalsIgnoreCase("A+"))
                    {
                        bloodgrfill.setSelectedIndex(1);
                        //abc="Male";
                        //male.setSelected(true);
                    }
                    if(r.getString(12).equalsIgnoreCase("A-"))
                        {
                            bloodgrfill.setSelectedIndex(2);
                            //abc1="Female";
                            //female.setSelected(true);
                        }
                        
                        if(r.getString(12).equalsIgnoreCase("B+"))
                        {
                            bloodgrfill.setSelectedIndex(3);
                            //abc2="Other";
                            //other.setSelected(true);
                        }
                        
                            if(r.getString(12).equalsIgnoreCase("B-"))
                        {
                            bloodgrfill.setSelectedIndex(4);
                            //abc2="Other";
                            //other.setSelected(true);
                        }
                        if(r.getString(12).equalsIgnoreCase("AB+"))
                    {
                        bloodgrfill.setSelectedIndex(5);
                        //abc="Male";
                        //male.setSelected(true);
                    }
                    if(r.getString(12).equalsIgnoreCase("AB-"))
                        {
                            bloodgrfill.setSelectedIndex(6);
                            //abc1="Female";
                            //female.setSelected(true);
                        }
                        
                        if(r.getString(12).equalsIgnoreCase("O+"))
                        {
                            bloodgrfill.setSelectedIndex(7);
                            //abc2="Other";
                            //other.setSelected(true);
                        }
                        
                            if(r.getString(12).equalsIgnoreCase("O-"))
                        {
                            bloodgrfill.setSelectedIndex(8);
                            //abc2="Other";
                            //other.setSelected(true);
                        }
                    //bloodgrfill.setText(r.getString(12));
                    mobilefill.setText(r.getString(13));
                    addressfill.setText(r.getString(16));
                    String part=r.getString(17);
                    String[] dividepart=part.split("-");
                    String part1=dividepart[0];
                    String part2=dividepart[1];
                    //JOptionPane.showMessageDialog(null, part1);
                    //JOptionPane.showMessageDialog(null, part2);
                    if(part1.equalsIgnoreCase("CO"))
                    {
                        selectcourse.setSelectedIndex(1);
                    }
                    if(part1.equalsIgnoreCase("EE"))
                    {
                        selectcourse.setSelectedIndex(2);
                    }
                    if(part1.equalsIgnoreCase("ME"))
                    {
                        selectcourse.setSelectedIndex(3);
                    }
                    if(part1.equalsIgnoreCase("IF"))
                    {
                        selectcourse.setSelectedIndex(4);
                    }
                    char numbercourse=part2.charAt(0);
                    char schemecourse=part2.charAt(1);
                    if(numbercourse=='1')
                    {
                        selectsemester.setSelectedIndex(1);
                    }
                    if(numbercourse=='2')
                    {
                        selectsemester.setSelectedIndex(2);
                    }
                    if(numbercourse=='3')
                    {
                        selectsemester.setSelectedIndex(3);
                    }
                    if(numbercourse=='4')
                    {
                        selectsemester.setSelectedIndex(4);
                    }
                    if(numbercourse=='5')
                    {
                        selectsemester.setSelectedIndex(5);
                    }
                    if(numbercourse=='6')
                    {
                        selectsemester.setSelectedIndex(6);
                    }
                    /*
                     * E
G
I
                     */
                    if(schemecourse=='E')
                    {
                        selectscheme.setSelectedIndex(1);
                    }
                    if(schemecourse=='G')
                    {
                        selectscheme.setSelectedIndex(2);
                    }
                    if(schemecourse=='I')
                    {
                        selectscheme.setSelectedIndex(3);
                    }
                    //JOptionPane.showMessageDialog(null, numbercourse);
                    if(r.getString(18).equalsIgnoreCase("Yes"))
                    {
                        dcyes.setSelected(true);
                    }
                    if(r.getString(18).equalsIgnoreCase("No"))
                    {
                        dcno.setSelected(true);
                    }
                }
            }
            if(k==0)
            {
                JOptionPane.showMessageDialog(null, "Enrollment Number is not Found");
            }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_fillinformationpageActionPerformed

    private void fillregisternumberbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fillregisternumberbuttonActionPerformed
        try
        {
        String erno1;
        erno1=enrollmentnofill.getText();
        char ern1=erno1.charAt(0);

        char ern2=erno1.charAt(1);
        //JOptionPane.showMessageDialog(null,ern2);
        //int numberern=10;
        int numberern=ern1;
        int numberern1=ern2;
        numberern=numberern-48;
        numberern1=numberern1-48;
        //JOptionPane.showMessageDialog(null,numberern1);
        //String numberern1string="1";
        numberern=numberern*10;
        numberern=numberern+numberern1;
        int numberern2=numberern+1;
        String numberernstring=Integer.toString(numberern);
        numberernstring=numberernstring.concat("-");
        String numberernstring1=Integer.toString(numberern2);
        numberernstring=numberernstring.concat(numberernstring1);
        numberernstring=numberernstring.concat("/");
        //String register1234;
        String collegenameern="GPMZR/";
        String branchern="1";
        /*
        * ----Select Branch----, Computer Engineering, Electrical Engineering, Mechanical Engineering, Information Technology
        * ---SELECT COURSE---, CO, EE, ME, IF
        */
        if(branchfill.getSelectedIndex()==1)
        {
            selectcourse.setSelectedIndex(1);
            branchern="CO/";
        }
        if(branchfill.getSelectedIndex()==2)
        {
            selectcourse.setSelectedIndex(2);
            branchern="EE/";
        }
        if(branchfill.getSelectedIndex()==3)
        {
            selectcourse.setSelectedIndex(3);
            branchern="ME";
        }
        if(branchfill.getSelectedIndex()==4)
        {
            selectcourse.setSelectedIndex(4);
            branchern="IF";
        }
        collegenameern=collegenameern.concat(branchern);
        collegenameern=collegenameern.concat(numberernstring);
        collegenameern=collegenameern.concat(erno1);
        registernumberfill.setText(collegenameern);
        //String branchern= (String) branchfill.getSelectedItem();
        //=Integer.toString(numberern);
        }
        catch(Exception e)
                {
                    JOptionPane.showMessageDialog(null,e);
                }
    }//GEN-LAST:event_fillregisternumberbuttonActionPerformed

    private void bloodgrfillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodgrfillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bloodgrfillActionPerformed

    private void dateofbirthinwordfillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateofbirthinwordfillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateofbirthinwordfillActionPerformed

    private void registernumberfillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registernumberfillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_registernumberfillActionPerformed

    private void selectcourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectcourseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectcourseActionPerformed

    private void selectschemeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectschemeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectschemeActionPerformed

    private void dcnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dcnoActionPerformed

    private void enrollmentnofillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enrollmentnofillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enrollmentnofillActionPerformed

    private void selectsemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectsemesterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectsemesterActionPerformed

    private void addressfillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressfillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressfillActionPerformed

    private void placeofbirthfillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeofbirthfillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_placeofbirthfillActionPerformed

    private void mobilefillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobilefillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobilefillActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(modifypage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(modifypage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(modifypage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(modifypage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new modifypage().setVisible(true);
               
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Submit;
    private javax.swing.JLabel address;
    private javax.swing.JTextField addressfill;
    private javax.swing.JButton back;
    private com.toedter.calendar.JDateChooser birthofdatefill;
    private javax.swing.JLabel bloodgr;
    private javax.swing.JComboBox bloodgrfill;
    private javax.swing.JLabel branch;
    private javax.swing.JComboBox branchfill;
    private javax.swing.JLabel caste;
    private javax.swing.JTextField castefill;
    private javax.swing.JLabel coursesemesterfill;
    private javax.swing.JLabel dateofadmission;
    private com.toedter.calendar.JDateChooser dateofadmition;
    private javax.swing.JLabel dateofbirth;
    private javax.swing.JLabel dateofbirthinword;
    private javax.swing.JTextField dateofbirthinwordfill;
    private javax.swing.JRadioButton dcno;
    private javax.swing.ButtonGroup dcstudentbuttion;
    private javax.swing.JLabel dcstudentlabel;
    private javax.swing.JRadioButton dcyes;
    private javax.swing.JLabel enrollmentno;
    private javax.swing.JTextField enrollmentnofill;
    private javax.swing.JRadioButton female;
    private javax.swing.JButton filldateofbirth;
    private javax.swing.JButton fillinformationpage;
    private javax.swing.JButton fillregisternumberbutton;
    private javax.swing.JLabel gender;
    private javax.swing.ButtonGroup genderbutton;
    private javax.swing.JLabel institutionlastattende;
    private javax.swing.JTextField institutionlastattendedfill;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton male;
    private javax.swing.JTextField mobilefill;
    private javax.swing.JLabel mobileno;
    private javax.swing.JLabel name;
    private javax.swing.JTextField namefill;
    private javax.swing.JLabel nameofmother;
    private javax.swing.JTextField nameofmotherfill;
    private javax.swing.JLabel nationality;
    private javax.swing.JTextField nationalityfill;
    private javax.swing.JLabel newenrollmentno;
    private javax.swing.JTextField newenrollmentnofill;
    private javax.swing.JRadioButton other;
    private javax.swing.JLabel placeofbirth;
    private javax.swing.JTextField placeofbirthfill;
    private javax.swing.JTextField registernumberfill;
    private javax.swing.JComboBox selectcourse;
    private javax.swing.JComboBox selectscheme;
    private javax.swing.JComboBox selectsemester;
    // End of variables declaration//GEN-END:variables
}

